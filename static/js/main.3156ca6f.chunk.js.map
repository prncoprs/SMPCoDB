{"version":3,"sources":["settings/api_routes.ts","settings/localstorage_keyconfig.ts","components/model/utils/utils.tsx","components/model/TableContext.tsx","components/model/table_structure_schema.ts","components/pages/table/InputRowTableConfigCard.tsx","settings/column_types.ts","components/pages/table/TableConfigCard.tsx","components/pages/table/TableConfigPage.tsx","components/model/CodeContext.tsx","components/model/SettingsContext.tsx","components/model/utils/editorUtils.tsx","components/pages/code/components/CodePanel.tsx","components/pages/code/CodePage.tsx","components/pages/code/components/TreeDisplay.tsx","components/pages/code/components/CodeAction.tsx","components/pages/settings/SettingsPage.tsx","components/pages/table/TableAction.tsx","settings/routes.tsx","components/sider/SideBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["apiRoutes","localStorageKeyConfig","sqlKeywords","keyword","desc","Utils","p","URL","process","REACT_APP_URL","href","range","model","text","tables","contents","k","toLowerCase","includes","value","table","table_name","columns","column","toLocaleLowerCase","name","column_type","TableConfigContext","React","createContext","TableConfigProvider","props","children","useState","configs","setConfigsState","openRawConfigDialog","setOpenRawConfigDialog","useEffect","tableConfig","localStorage","getItem","JSON","parse","setItem","stringify","setConfigs","useCallback","vs","update","fetchConfigs","a","url","getURL","axios","get","resp","data","message","success","notification","error","description","response","duration","placement","Provider","tableStructureSchema","$schema","type","items","$ref","definitions","TableConfigElement","additionalProperties","properties","data_sizes","data_paths","annotations","owner","required","title","Column","InputRowTableConfigCard","useContext","setValue","onOpen","onClose","handleJSONEditorWillMount","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","validate","enableSchemaRequest","schemas","uri","fileMatch","schema","subTitle","extra","onClick","style","maxWidth","Link","target","visible","onOk","onCancel","footer","width","window","innerWidth","height","language","options","minimap","enabled","beforeMount","e","onChange","column_types","table_owner","TableConfigCard","config","index","setName","setOwner","open","setOpen","formValues","map","v","annotation","updateTableConfig","updateConfig","console","log","filter","undefined","deleteTable","Modal","confirm","content","splice","id","margin","shape","marginRight","DeleteOutlined","EditOutlined","bordered","Item","label","marginTop","initialValues","onValuesChange","_","Title","level","List","fields","add","remove","gutter","key","fieldKey","restField","display","marginBottom","xs","md","rules","c","i","Option","placeholder","span","MinusCircleOutlined","block","icon","PlusOutlined","v4","TableConfigPage","loading","setLoading","location","useLocation","q","qs","search","setTimeout","element","document","getElementById","scrollIntoView","overflowY","CodeContext","CodeProvider","codeRunResults","setCodeRunResultState","isLoading","setIsLoading","setIndex","showEdit","setShowEdit","code","err","setCodeRunResults","runCode","tableConfigs","post","sql","annotation_name","num_of_rows","result","info","deleteResultCache","forEach","SettingsContext","SettingsProvider","loaded","setLoaded","role","setRoleState","backend","setBackendState","datadir","setDatadirState","isDownloading","setIsDownloading","setDatadir","r","setRole","setBackend","downloadData","output_dir","values","EditorUtils","suggestions","push","kind","CompletionItemKind","Constant","documentation","insertText","toUpperCase","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","Keyword","hover","completion","CodePanel","codeRunResult","editor","setEditor","handleSQLEditorWillMount","dispose","registerCompletionItemProvider","provideCompletionItems","position","word","getWordUntilPosition","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","generateSuggestions","registerHoverProvider","provideHover","getWordAtPosition","generateHover","updateCode","padding","onMount","close","overflowX","results","server_result","client_result","length","toLocaleUpperCase","field","rows","res","cs","slice","s","j","rowHeight","CodePage","renderPanel","TabPane","tab","addIcon","parseInt","onEdit","targetKey","action","TreeDisplay","joinGraph","orientation","pathFunc","translate","y","x","nodeSize","CodeAction","Form","useForm","form","reConfigure","getFieldsValue","setFieldsValue","justify","size","CaretRightOutlined","UserSwitchOutlined","trigger","BarChartOutlined","resetFields","SettingsPage","formValue","settings","changed","help","Meta","newConfig","TableAction","addTable","ReloadOutlined","routes","path","component","TableOutlined","hasSubMenu","SettingOutlined","CodeOutlined","SideBar","history","useHistory","selectedPath","setSelectedPath","expanded","pathname","route","find","renderSubMenu","renderMenu","subMenus","onTitleClick","theme","mode","selectedKeys","Layout","Header","Sider","Content","App","collapsed","setCollapsed","overflow","bodyStyle","align","className","MenuUnfoldOutlined","MenuFoldOutlined","flexGrow","exact","background","collapsible","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3156ca6f.chunk.js","sourcesContent":["/**\n * This file contains routes for api call\n *\n */\n\nexport const apiRoutes = {\n  fetchTableSchemaRoute: \"/schema\",\n  downloadDataRoute: \"/download_data\",\n  runPythonCodeRoute: \"/generate_python\",\n};\n","export const localStorageKeyConfig = {\n  codeResultKey: \"code\",\n  roleKey: \"role\",\n  datadirKey: \"datadir\",\n  backendKey: \"backend\",\n  tableStructureKey: \"tableStructure\",\n};\n","import { TableConfig } from \"../table-config\";\nexport interface TableInterface {\n  table_name: string;\n  columns: ColumnInterface[];\n}\n\nexport interface ColumnInterface {\n  column_type: string;\n  name: string;\n}\n\nexport const sqlKeywords = [\n  {\n    keyword: \"select\",\n    desc: \"\",\n  },\n  {\n    keyword: \"from\",\n    desc: \"\",\n  },\n  {\n    keyword: \"where\",\n    desc: \"\",\n  },\n  {\n    keyword: \"sum\",\n    desc: \"Aggregation function\",\n  },\n  {\n    keyword: \"max\",\n    desc: \"Aggregation function\",\n  },\n  {\n    keyword: \"avg\",\n    desc: \"Aggregation function\",\n  },\n  {\n    keyword: \"count\",\n    desc: \"Aggregation function\",\n  },\n\n  {\n    keyword: \"group by\",\n    desc: \"\",\n  },\n  {\n    keyword: \"desc\",\n    desc: \"\",\n  },\n  {\n    keyword: \"limit\",\n    desc: \"\",\n  },\n  {\n    keyword: \"having\",\n    desc: \"\",\n  },\n  {\n    keyword: \"exists\",\n    desc: \"\",\n  },\n];\n\nexport class Utils {\n  static getURL(p: string): string {\n    return new URL(p, process.env.REACT_APP_URL).href;\n  }\n\n  static generateHover(\n    range: any,\n    model: any,\n    text: string,\n    tables?: TableConfig[]\n  ) {\n    if (tables) {\n      for (let k of sqlKeywords) {\n        if (text.toLowerCase().includes(k.keyword.toLowerCase())) {\n          return {\n            range,\n            contents: [{ value: \"SQL Built In\" }, { value: k.desc }],\n          };\n        }\n      }\n      for (let table of tables) {\n        if (text.toLowerCase().includes(table.table_name.toLowerCase())) {\n          return {\n            range,\n            contents: [{ value: \"Table Name\" }],\n          };\n        }\n\n        for (let column of table.columns) {\n          if (text.toLocaleLowerCase().includes(column.name.toLowerCase())) {\n            return {\n              range,\n              contents: [\n                { value: table.table_name },\n                { value: `**Type: ${column.column_type}**` },\n              ],\n            };\n          }\n        }\n      }\n    } else\n      return {\n        range,\n        contents: [],\n      };\n  }\n}\n","import { message, notification } from \"antd\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { apiRoutes } from \"../../settings/api_routes\";\nimport { localStorageKeyConfig } from \"../../settings/localstorage_keyconfig\";\nimport { TableConfig } from \"./table-config\";\nimport { Utils } from \"./utils/utils\";\n\ninterface TableConfigContext {\n  configs: TableConfig[];\n  setConfigs(configs: TableConfig[], update?: boolean): void;\n  openRawConfigDialog: boolean;\n  setOpenRawConfigDialog(v: boolean): void;\n  fetchConfigs(): Promise<void>;\n}\n\n//@ts-ignore\nexport const TableConfigContext = React.createContext<TableConfigContext>({});\n\nexport default function TableConfigProvider(props: any) {\n  const { children } = props;\n\n  const [configs, setConfigsState] = React.useState<TableConfig[]>([]);\n  const [openRawConfigDialog, setOpenRawConfigDialog] = React.useState(false);\n\n  React.useEffect(() => {\n    let tableConfig = localStorage.getItem(\n      localStorageKeyConfig.tableStructureKey\n    );\n    if (tableConfig !== null) {\n      setConfigsState(JSON.parse(tableConfig));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem(\n      localStorageKeyConfig.tableStructureKey,\n      JSON.stringify(configs)\n    );\n  }, [configs]);\n\n  const setConfigs = React.useCallback(\n    (vs: TableConfig[], update: boolean = true) => {\n      localStorage.setItem(\n        localStorageKeyConfig.tableStructureKey,\n        JSON.stringify(vs)\n      );\n      if (update) {\n        setConfigsState(JSON.parse(JSON.stringify(vs)));\n      }\n    },\n    [configs]\n  );\n\n  const fetchConfigs = React.useCallback(async () => {\n    try {\n      let url = Utils.getURL(apiRoutes.fetchTableSchemaRoute);\n      let resp = await axios.get(url);\n      setConfigs(resp.data);\n      message.success(\"Tables are updated\");\n    } catch (err) {\n      notification.error({\n        message: \"Cannot fetch table configs\",\n        description: `${\n          err?.response?.data ?? \"Cannot connect to the backend\"\n        }`,\n        duration: 5,\n        placement: \"bottomRight\",\n      });\n    }\n  }, []);\n\n  const value: TableConfigContext = {\n    configs,\n    setConfigs,\n    setOpenRawConfigDialog,\n    openRawConfigDialog,\n    fetchConfigs,\n  };\n\n  return (\n    <TableConfigContext.Provider value={value}>\n      {children}\n    </TableConfigContext.Provider>\n  );\n}\n","export const tableStructureSchema = {\n  $schema: \"http://json-schema.org/draft-06/schema#\",\n  type: \"array\",\n  items: {\n    $ref: \"#/definitions/TableConfigElement\",\n  },\n  definitions: {\n    TableConfigElement: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        data_sizes: {\n          type: \"array\",\n          items: {\n            type: \"integer\",\n          },\n        },\n        data_paths: {\n          type: \"array\",\n          items: {\n            type: \"string\",\n          },\n        },\n        annotations: {\n          type: \"array\",\n          items: {\n            type: \"string\",\n          },\n        },\n        table_name: {\n          type: \"string\",\n        },\n        owner: {\n          type: \"string\",\n        },\n        columns: {\n          type: \"array\",\n          items: {\n            $ref: \"#/definitions/Column\",\n          },\n        },\n      },\n      required: [\n        \"columns\",\n        \"data_sizes\",\n        \"table_name\",\n        \"data_paths\",\n        \"annotations\",\n      ],\n      title: \"TableConfigElement\",\n    },\n    Column: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        column_type: {\n          type: \"string\",\n        },\n        name: {\n          type: \"string\",\n        },\n      },\n      required: [\"column_type\", \"name\"],\n      title: \"Column\",\n    },\n  },\n};\n","import React from \"react\";\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\nimport { Button, PageHeader, Row, Typography, Modal } from \"antd\";\nimport { TableConfigContext } from \"../../model/TableContext\";\nimport { tableStructureSchema } from \"../../model/table_structure_schema\";\n\nexport default function InputRowTableConfigCard() {\n  const { setOpenRawConfigDialog, openRawConfigDialog, configs, setConfigs } =\n    React.useContext(TableConfigContext);\n\n  const [value, setValue] = React.useState(\"\");\n\n  const onOpen = React.useCallback(() => {\n    setValue(JSON.stringify(configs, null, 4));\n    setOpenRawConfigDialog(true);\n  }, [configs]);\n\n  const onClose = React.useCallback(() => {\n    setConfigs(JSON.parse(value));\n    setOpenRawConfigDialog(false);\n  }, [value]);\n\n  const handleJSONEditorWillMount = React.useCallback(\n    (monaco: Monaco) => {\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        validate: true,\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            uri: \"https://raw.githubusercontent.com/sirily11/SECYAN-GEN/master/examples/table_config.json\",\n            fileMatch: [\"*\"],\n            schema: tableStructureSchema,\n          },\n        ],\n      });\n    },\n    [value]\n  );\n\n  return (\n    <PageHeader\n      title=\"Table Configuration\"\n      subTitle=\"Config your table's info here\"\n      extra={[\n        <Button type=\"primary\" onClick={onOpen}>\n          Set Raw Data\n        </Button>,\n      ]}\n    >\n      <Typography style={{ maxWidth: \"800px\" }}>\n        You can either use the raw Data Config Editor to modify your database\n        table's infomation, or use the GUI below to modify your table. You can\n        check this{\" \"}\n        <Typography.Link\n          target=\"_blank\"\n          href=\"https://github.com/sirily11/SECYAN-GEN/blob/master/examples/table_config.json\"\n        >\n          Link\n        </Typography.Link>{\" \"}\n        for example table configuration. You can also fetch table schema by\n        clicking the fetching button. The data path and size field might be\n        empty and will be updated when you click fetch data in settings page.\n        You can update the field mannuly by using raw data editor, however, we\n        don't recommand editting this field mannully.\n      </Typography>\n      <Modal\n        title=\"Raw Data Configuration\"\n        visible={openRawConfigDialog}\n        onOk={onClose}\n        onCancel={onClose}\n        footer={[<Button onClick={onClose}>Close</Button>]}\n        width={window.innerWidth * 0.8}\n      >\n        <Editor\n          height={500}\n          language=\"json\"\n          options={{ minimap: { enabled: false } }}\n          beforeMount={(e) => handleJSONEditorWillMount(e)}\n          value={value}\n          onChange={(e) => {\n            setValue(e ?? \"\");\n          }}\n        />\n      </Modal>\n    </PageHeader>\n  );\n}\n","export const column_types = [\"int\", \"string\", \"decimal\", \"date\"];\n\nexport const table_owner = [\"CLIENT\", \"SERVER\"];\n","import {\n  Button,\n  Card,\n  Input,\n  Space,\n  Form,\n  Row,\n  Col,\n  Typography,\n  Divider,\n  Select,\n  Modal,\n  notification,\n  List,\n  Descriptions,\n} from 'antd';\nimport React from 'react';\nimport { TableConfig } from '../../model/table-config';\nimport {\n  EditOutlined,\n  PlusOutlined,\n  MinusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { TableConfigContext } from '../../model/TableContext';\nimport { column_types, table_owner } from '../../../settings/column_types';\nimport { v4 } from 'uuid';\n\ninterface Props {\n  config: TableConfig;\n  index: number;\n}\n\ninterface FormValue {\n  path_size: { size: number; path: string }[];\n  columns: any[];\n  annotations: any[];\n}\n\nexport default function TableConfigCard(props: Props) {\n  const { config, index } = props;\n  const [name, setName] = React.useState(config.table_name);\n  const [owner, setOwner] = React.useState(config.owner);\n  const [open, setOpen] = React.useState(false);\n  const { setConfigs, configs } = React.useContext(TableConfigContext);\n\n  const formValues = React.useCallback(() => {\n    return {\n      ...config,\n      annotations: config.annotations.map((v) => {\n        return { annotation: v };\n      }),\n    };\n  }, [config]);\n\n  // Will be used to rename the table\n  const updateTableConfig = React.useCallback(() => {\n    configs[index].table_name = name;\n    configs[index].owner = owner;\n    setConfigs(configs);\n    setOpen(false);\n  }, [name, owner]);\n\n  // Will be used on each field's update\n  const updateConfig = React.useCallback(\n    (value: FormValue) => {\n      console.log(value.annotations);\n      let annotations = value.annotations\n        .filter((v) => v !== undefined && v.annotation !== undefined)\n        .map((a) => a.annotation);\n\n      configs[index].columns = value.columns;\n      configs[index].annotations = annotations !== undefined ? annotations : [];\n      setConfigs(configs, false);\n    },\n    [config, configs]\n  );\n\n  const deleteTable = React.useCallback(() => {\n    Modal.confirm({\n      title: 'confirm',\n      content: 'Delete this table',\n      onOk: () => {\n        configs.splice(index, 1);\n        setConfigs(JSON.parse(JSON.stringify(configs)));\n        notification.success({\n          message: 'Table deleted',\n          placement: 'bottomRight',\n        });\n      },\n    });\n  }, [config]);\n\n  return (\n    <Card\n      id={config.table_name}\n      title={`${config.table_name} - ${config.owner ?? 'Client'}`}\n      key={index}\n      style={{ margin: 10 }}\n      extra={[\n        <Button\n          shape=\"circle\"\n          onClick={deleteTable}\n          style={{ marginRight: 10 }}\n        >\n          <DeleteOutlined />\n        </Button>,\n        <Button shape=\"circle\" onClick={() => setOpen(true)}>\n          <EditOutlined />\n        </Button>,\n      ]}\n    >\n      <Descriptions title=\"Data size and path\" bordered={true}>\n        <Descriptions.Item label=\"Data Path\">\n          <div data-testid={'table-config-path'}>{config.data_paths}</div>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Data Size\">\n          <div data-testid={'table-config-size'}>{config.data_sizes}</div>\n        </Descriptions.Item>\n      </Descriptions>\n      <Form\n        style={{ marginTop: 20 }}\n        initialValues={formValues()}\n        onValuesChange={(_, v) => {\n          updateConfig(v);\n        }}\n      >\n        {/* columns */}\n        <Typography.Title level={5}>Table Columns</Typography.Title>\n        <Form.List name=\"columns\">\n          {(fields, { add, remove }) => (\n            <Row gutter={[10, 10]}>\n              {fields?.map(({ key, name, fieldKey, ...restField }) => (\n                <Col\n                  key={`column-${key}`}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  xs={24}\n                >\n                  <Row style={{ width: '100%' }} gutter={[20, 10]}>\n                    <Col md={5} xs={24}>\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'column_type']}\n                        fieldKey={[fieldKey, 'type']}\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Column type is required',\n                          },\n                        ]}\n                      >\n                        <Select>\n                          {column_types.map((c, i) => (\n                            <Select.Option value={c}>{c}</Select.Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={5} xs={22}>\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'name']}\n                        fieldKey={[fieldKey, 'name']}\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Column name is required',\n                          },\n                        ]}\n                      >\n                        <Input placeholder=\"Column Name\" />\n                      </Form.Item>\n                    </Col>\n                    <Col span={2}>\n                      <MinusCircleOutlined onClick={() => remove(name)} />\n                    </Col>\n                  </Row>\n                </Col>\n              ))}\n              <Col xs={24} key={`button-${v4()}`}>\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Add Column\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          )}\n        </Form.List>\n        {/* end columns */}\n        {/* Annotations */}\n        <Typography.Title level={5}>Annotations</Typography.Title>\n        <Form.List name=\"annotations\">\n          {(fields, { add, remove }) => (\n            <div>\n              {fields?.map(({ key, name, fieldKey, ...restField }) => (\n                <Row gutter={[10, 10]}>\n                  <Col span={22}>\n                    <Form.Item\n                      name={[name, 'annotation']}\n                      fieldKey={[fieldKey, 'annotation']}\n                      label=\"Annotation\"\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(name)} />\n                  </Col>\n                </Row>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Add Annotation\n                </Button>\n              </Form.Item>\n            </div>\n          )}\n        </Form.List>\n        {/* end Annotations */}\n      </Form>\n      <Modal\n        visible={open}\n        title=\"Table name\"\n        onCancel={() => {\n          setName(config.table_name);\n          setOwner(config.owner);\n          setOpen(false);\n        }}\n        onOk={updateTableConfig}\n      >\n        <Input\n          placeholder=\"Table name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <Select\n          style={{ width: '100%', marginTop: 20 }}\n          placeholder=\"Select Owner\"\n          value={owner}\n          onChange={(e) => setOwner(e)}\n        >\n          {table_owner.map((v) => (\n            <Select.Option value={v} key={v}>\n              {v}\n            </Select.Option>\n          ))}\n        </Select>\n      </Modal>\n    </Card>\n  );\n}\n","import { Affix, Button, notification, Row, Typography } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TableConfigContext } from '../../model/TableContext';\nimport InputRowTableConfigCard from './InputRowTableConfigCard';\nimport TableConfigCard from './TableConfigCard';\nimport qs from 'query-string';\n\nexport default function TableConfigPage() {\n  const { configs, setConfigs } = React.useContext(TableConfigContext);\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const location = useLocation();\n\n  let q = qs.parse(location.search);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 50);\n  }, []);\n\n  React.useEffect(() => {\n    const table = q.table;\n    if (table) {\n      let element = document.getElementById(table as string);\n      element?.scrollIntoView();\n    }\n  }, [location.search, loading]);\n\n  return (\n    <div style={{ overflowY: 'scroll', height: '100%' }}>\n      <InputRowTableConfigCard />\n      {!loading &&\n        configs?.map((c, i) => (\n          <TableConfigCard key={`config-${i}`} config={c} index={i} />\n        ))}\n    </div>\n  );\n}\n","import { notification } from \"antd\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { CodeRunResult } from \"./code-run-result\";\nimport { TableConfig } from \"./table-config\";\nimport { Utils } from \"./utils/utils\";\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\nimport { apiRoutes } from \"../../settings/api_routes\";\nimport { localStorageKeyConfig } from \"../../settings/localstorage_keyconfig\";\n\ninterface Code {\n  codeRunResults: CodeRunResult[];\n  setCodeRunResults(c: CodeRunResult[]): void;\n  runCode(index: number, tableConfigs: TableConfig[]): Promise<void>;\n  isLoading: boolean;\n  index: number;\n  setIndex(num: number): void;\n  showEdit: boolean;\n  setShowEdit(b: boolean): void;\n  deleteResultCache(): void;\n  // initSQLEditor(m: Monaco): void;\n}\n\n//@ts-ignore\nexport const CodeContext = React.createContext<Code>({});\n\nexport default function CodeProvider(props: any) {\n  const { children } = props;\n  const [codeRunResults, setCodeRunResultState] = React.useState<\n    CodeRunResult[]\n  >([]);\n\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [index, setIndex] = React.useState(0);\n  const [showEdit, setShowEdit] = React.useState(false);\n\n  React.useEffect(() => {\n    let code = localStorage.getItem(localStorageKeyConfig.codeResultKey);\n    if (code) {\n      try {\n        setCodeRunResultState(JSON.parse(code));\n      } catch (err) {\n        console.log(\"No Code Saved\");\n      }\n    }\n  }, []);\n\n  const setCodeRunResults = React.useCallback(\n    (c: CodeRunResult[]) => {\n      localStorage.setItem(\n        localStorageKeyConfig.codeResultKey,\n        JSON.stringify(c)\n      );\n      setCodeRunResultState(JSON.parse(JSON.stringify(c)));\n    },\n    [codeRunResults]\n  );\n\n  const runCode = React.useCallback(\n    async (index: number, tableConfigs: TableConfig[]) => {\n      let url = Utils.getURL(apiRoutes.runPythonCodeRoute);\n      let data = codeRunResults[index];\n\n      try {\n        setIsLoading(true);\n        let resp = await axios.post(url, {\n          sql: data.code,\n          annotation_name: data.annotation_name,\n          num_of_rows: data.num_of_rows,\n          table: JSON.stringify(tableConfigs),\n        });\n\n        codeRunResults[index].result = resp.data;\n\n        setCodeRunResults(codeRunResults);\n        notification.info({\n          message: \"Code results returned\",\n          placement: \"bottomRight\",\n        });\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        notification.error({\n          message: \"Cannot generate code\",\n          description: `${\n            err?.response?.data ?? \"Cannot connect to the backend\"\n          }`,\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    },\n    [codeRunResults]\n  );\n\n  const deleteResultCache = React.useCallback(() => {\n    codeRunResults.forEach((c) => {\n      c.result = undefined;\n    });\n\n    setCodeRunResults(codeRunResults);\n  }, [codeRunResults]);\n\n  const value: Code = {\n    codeRunResults,\n    setCodeRunResults,\n    runCode,\n    isLoading,\n    index,\n    setIndex,\n    showEdit,\n    setShowEdit,\n    deleteResultCache,\n  };\n\n  return <CodeContext.Provider value={value}>{children}</CodeContext.Provider>;\n}\n","/** @format */\n\nimport { message, notification } from \"antd\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { apiRoutes } from \"../../settings/api_routes\";\nimport { localStorageKeyConfig } from \"../../settings/localstorage_keyconfig\";\nimport { TableConfig } from \"./table-config\";\nimport { Utils } from \"./utils/utils\";\n\nexport type Role = \"Client\" | \"Server\";\nexport type BackEnd = \"Default Backend\" | \"Postgres Backend\";\n\ninterface Settings {\n  loaded: boolean;\n  role: Role;\n  setRole(role: Role): void;\n  backend: BackEnd;\n  setBackend(b: BackEnd): void;\n  datadir: string;\n  setDatadir(v: string): void;\n  isDownloading: boolean;\n  downloadData(configs: TableConfig[]): Promise<TableConfig[] | undefined>;\n}\n\n//@ts-ignore\nexport const SettingsContext = React.createContext<Settings>({});\n\nexport default function SettingsProvider(props: any) {\n  const [loaded, setLoaded] = React.useState(false);\n  const [role, setRoleState] = React.useState<Role>(\"Server\");\n  const [backend, setBackendState] = React.useState<BackEnd>(\"Default Backend\");\n  const [datadir, setDatadirState] = React.useState(\"\");\n  const [isDownloading, setIsDownloading] = React.useState(false);\n\n  React.useEffect(() => {\n    let role = localStorage.getItem(localStorageKeyConfig.roleKey);\n    let backend = localStorage.getItem(localStorageKeyConfig.backendKey);\n    let data = localStorage.getItem(localStorageKeyConfig.datadirKey);\n\n    if (role) {\n      setRoleState(role as Role);\n    }\n    if (backend) {\n      setBackendState(backend as BackEnd);\n    }\n\n    if (data) {\n      setDatadirState(data);\n    }\n\n    setLoaded(true);\n  }, []);\n\n  const setDatadir = React.useCallback((r: string) => {\n    localStorage.setItem(localStorageKeyConfig.datadirKey, r);\n    setDatadirState(r);\n  }, []);\n\n  const setRole = React.useCallback((r: Role) => {\n    localStorage.setItem(localStorageKeyConfig.roleKey, r);\n    setRoleState(r);\n  }, []);\n\n  const setBackend = React.useCallback((r: BackEnd) => {\n    localStorage.setItem(localStorageKeyConfig.backendKey, r);\n    setBackendState(r);\n  }, []);\n\n  const downloadData = React.useCallback(\n    async (configs: TableConfig[]): Promise<TableConfig[] | undefined> => {\n      setIsDownloading(true);\n      try {\n        let url = Utils.getURL(apiRoutes.downloadDataRoute);\n        let data = await axios.post(url, {\n          tables: JSON.stringify(configs),\n          output_dir: datadir,\n        });\n        message.success(\"Successfully dump data into \" + datadir, 8);\n        return data.data;\n      } catch (err) {\n        notification.error({\n          message: \"Cannot fetch table configs\",\n          description: `${\n            err?.response?.data ?? \"Cannot connect to the backend\"\n          }`,\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n        return undefined;\n      } finally {\n        setIsDownloading(false);\n      }\n    },\n    [datadir]\n  );\n\n  const values: Settings = {\n    role,\n    setRole,\n    backend,\n    setBackend,\n    datadir,\n    setDatadir,\n    loaded,\n    isDownloading,\n    downloadData,\n  };\n\n  return (\n    <SettingsContext.Provider value={values}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n","import * as monaco from \"monaco-editor\";\nimport { TableConfig } from \"../table-config\";\nimport { sqlKeywords } from \"./utils\";\nexport class EditorUtils {\n  static generateSuggestions(range: any, tables?: TableConfig[]) {\n    if (tables) {\n      let suggestions = [];\n      for (let table of tables) {\n        suggestions.push({\n          label: table.table_name,\n          kind: monaco.languages.CompletionItemKind.Constant,\n          documentation: \"\",\n          insertText: table.table_name.toUpperCase(),\n          insertTextRules:\n            monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          range: range,\n        });\n\n        for (let column of table.columns) {\n          suggestions.push({\n            label: column.name,\n            kind: monaco.languages.CompletionItemKind.Constant,\n            documentation: `${column.column_type}`,\n            insertText: column.name,\n            insertTextRules:\n              monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            range: range,\n          });\n        }\n      }\n\n      for (let k of sqlKeywords) {\n        suggestions.push({\n          label: k.keyword,\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          document: k.desc,\n          insertText: k.keyword.toUpperCase(),\n          insertTextRules:\n            monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          range: range,\n        });\n      }\n\n      return suggestions;\n    } else {\n      return [];\n    }\n  }\n}\n","import React from \"react\";\nimport { CodeRunResult } from \"../../../model/code-run-result\";\nimport { CodeContext } from \"../../../model/CodeContext\";\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\nimport { Utils } from \"../../../model/utils/utils\";\nimport { TableConfigContext } from \"../../../model/TableContext\";\nimport { Card, Col, notification, Row, Spin, Table } from \"antd\";\n//@ts-ignore\nimport { SettingsContext } from \"../../../model/SettingsContext\";\nimport {\n  DataGrid,\n  GridColDef,\n  GridValueGetterParams,\n} from \"@material-ui/data-grid\";\nimport { EditorUtils } from \"../../../model/utils/editorUtils\";\ninterface Props {\n  codeRunResult: CodeRunResult;\n  index: number;\n}\n\nconst height = \"calc(100vh - 64px - 56px - 20px)\";\nconst tableHeight = \"calc(100vh - 64px - 56px - 30px)\";\nlet hover: monaco.IDisposable | undefined = undefined;\nlet completion: monaco.IDisposable | undefined = undefined;\n\nexport default function CodePanel(props: Props) {\n  const { codeRunResult, index } = props;\n  const { setCodeRunResults, codeRunResults, showEdit, setShowEdit } =\n    React.useContext(CodeContext);\n\n  const [isLoading, setIsLoading] = React.useState(true);\n  const { configs } = React.useContext(TableConfigContext);\n  const { role } = React.useContext(SettingsContext);\n  const [editor, setEditor] =\n    React.useState<monaco.editor.IStandaloneCodeEditor>();\n\n  const handleSQLEditorWillMount = React.useCallback(\n    (monaco: Monaco) => {\n      hover?.dispose();\n      completion?.dispose();\n      completion = monaco.languages.registerCompletionItemProvider(\"sql\", {\n        provideCompletionItems: (\n          model: monaco.editor.ITextModel,\n          position: monaco.Position\n        ) => {\n          var word = model.getWordUntilPosition(position);\n          var range = {\n            startLineNumber: position.lineNumber,\n            endLineNumber: position.lineNumber,\n            startColumn: word.startColumn,\n            endColumn: word.endColumn,\n          };\n          if (configs) {\n            return {\n              suggestions: EditorUtils.generateSuggestions(range, configs),\n            };\n          }\n        },\n      });\n\n      hover = monaco.languages.registerHoverProvider(\"sql\", {\n        provideHover: (\n          model: monaco.editor.ITextModel,\n          position: monaco.Position\n        ) => {\n          var word = model.getWordAtPosition(position);\n          var range = {\n            startLineNumber: position.lineNumber,\n            endLineNumber: position.lineNumber,\n            startColumn: word?.startColumn,\n            endColumn: word?.endColumn,\n          };\n          return Utils.generateHover(range, model, word?.word ?? \"\", configs);\n        },\n      });\n    },\n    [configs, editor]\n  );\n\n  React.useEffect(() => {\n    notification.info({\n      message: \"Loading Data\",\n      placement: \"bottomRight\",\n    });\n  }, []);\n\n  // Update editor code\n  const updateCode = React.useCallback(\n    (code: string) => {\n      codeRunResults[index].code = code;\n      setCodeRunResults(codeRunResults);\n    },\n    [codeRunResult]\n  );\n\n  // Table columns\n  const columns = () => {\n    let results: string[][] | undefined =\n      role === \"Server\"\n        ? codeRunResult.result?.server_result\n        : codeRunResult.result?.client_result;\n    if (results?.length ?? 0 > 0) {\n      return results![0].map((v) => {\n        return {\n          title: v.toLocaleUpperCase(),\n          field: v.toLowerCase(),\n          width: v.length * 20,\n        };\n      });\n    }\n    return [];\n  };\n\n  const rows = () => {\n    let res: any[] = [];\n    let results: string[][] | undefined =\n      role === \"Server\"\n        ? codeRunResult.result?.server_result\n        : codeRunResult.result?.client_result;\n    if (results) {\n      let cs = results[0]!;\n      results.slice(1).forEach((s, i) => {\n        let data: { [key: string]: any } = {\n          id: i,\n        };\n        s.forEach((c, j) => {\n          data[cs[j]] = c;\n        });\n        res.push(data);\n      });\n    }\n\n    return res;\n  };\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Row gutter={[10, 10]}>\n        <Col xs={8}>\n          <Editor\n            value={codeRunResult.code}\n            onMount={(e) => {\n              setEditor(e);\n              setIsLoading(false);\n              notification.close(\"Data Loaded\");\n            }}\n            language=\"sql\"\n            beforeMount={(e) => handleSQLEditorWillMount(e)}\n            options={{ minimap: { enabled: false } }}\n            height={height}\n            onChange={(e) => {\n              updateCode(e as string);\n            }}\n          />\n        </Col>\n        <Col\n          xs={16}\n          style={{ overflowY: \"scroll\", overflowX: \"scroll\", height: \"100%\" }}\n        >\n          <div style={{ height: tableHeight, overflowY: \"hidden\" }}>\n            {codeRunResult.result && !isLoading && (\n              <DataGrid columns={columns()} rows={rows()} rowHeight={60} />\n            )}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Affix, Button, Col, Row, Table, Tabs } from \"antd\";\nimport { CodeContext } from \"../../model/CodeContext\";\nimport { TableConfigContext } from \"../../model/TableContext\";\nimport { Utils } from \"../../model/utils/utils\";\nimport CodePanel from \"./components/CodePanel\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Editor, { Monaco } from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\n\nexport default function CodePage() {\n  const { codeRunResults, setCodeRunResults, setIndex } =\n    React.useContext(CodeContext);\n  const { configs } = React.useContext(TableConfigContext);\n\n  const renderPanel = React.useCallback(() => {\n    return codeRunResults.map((c, i) => (\n      <Tabs.TabPane tab={c.name} key={i} style={{ height: \"100%\" }}>\n        <CodePanel codeRunResult={c} index={i} />\n      </Tabs.TabPane>\n    ));\n  }, [codeRunResults]);\n\n  return (\n    <Tabs\n      type=\"editable-card\"\n      style={{ height: \"100%\" }}\n      addIcon={<PlusOutlined />}\n      onChange={(index) => {\n        setIndex(parseInt(index));\n      }}\n      onEdit={(targetKey, action) => {\n        if (action === \"add\") {\n          codeRunResults.push({\n            name: \"newResult\",\n            code: \"\",\n            num_of_rows: 100,\n            annotation_name: \"q3_annot\",\n          });\n          setCodeRunResults(codeRunResults);\n        } else {\n          codeRunResults.splice(parseInt(targetKey as string), 1);\n          setCodeRunResults(codeRunResults);\n        }\n      }}\n    >\n      {renderPanel()}\n    </Tabs>\n  );\n}\n","import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { CodeContext } from \"../../../model/CodeContext\";\n\nexport default function TreeDisplay() {\n  const { codeRunResults, index } = React.useContext(CodeContext);\n\n  const result = codeRunResults[index]?.result;\n\n  return (\n    <div style={{ height: 500, width: 1000 }}>\n      {/* {JSON.stringify(result?.joinGraph)} */}\n      {result && (\n        <Tree\n          data={result.joinGraph}\n          orientation=\"vertical\"\n          pathFunc=\"step\"\n          translate={{ y: 100, x: 400 }}\n          nodeSize={{ x: 257, y: 175 }}\n        />\n      )}\n    </div>\n  );\n}\n","import { Button, Form, Input, Row, Tooltip, Popover } from \"antd\";\nimport React from \"react\";\nimport {\n  EditOutlined,\n  CaretRightOutlined,\n  BarChartOutlined,\n  UserSwitchOutlined,\n} from \"@ant-design/icons\";\nimport { CodeContext } from \"../../../model/CodeContext\";\nimport { TableConfigContext } from \"../../../model/TableContext\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport TreeDisplay from \"./TreeDisplay\";\nimport { SettingsContext } from \"../../../model/SettingsContext\";\n\nexport default function CodeAction() {\n  const {\n    setCodeRunResults,\n    codeRunResults,\n    runCode,\n    isLoading,\n    index,\n    setShowEdit,\n    showEdit,\n  } = React.useContext(CodeContext);\n  const { configs } = React.useContext(TableConfigContext);\n  const { role, setRole } = React.useContext(SettingsContext);\n\n  const [form] = Form.useForm();\n\n  // Rename, etc\n  const reConfigure = React.useCallback(() => {\n    let values = form.getFieldsValue();\n    codeRunResults[index].annotation_name = values.annotation_name;\n    codeRunResults[index].name = values.name;\n    codeRunResults[index].num_of_rows = parseInt(values.num_of_rows);\n    setCodeRunResults(codeRunResults);\n    setShowEdit(false);\n  }, [codeRunResults, index]);\n\n  React.useEffect(() => {\n    form.setFieldsValue(codeRunResults[index]);\n  }, [showEdit]);\n\n  return (\n    <Row justify=\"end\" style={{ marginRight: 20 }}>\n      <Tooltip title=\"Run Code\">\n        <Button\n          shape=\"round\"\n          size=\"large\"\n          style={{ marginRight: 10 }}\n          loading={isLoading}\n          onClick={async () => {\n            await runCode(index, configs);\n          }}\n        >\n          <CaretRightOutlined />\n        </Button>\n      </Tooltip>\n      <Tooltip title={`\"Current role: ${role}\"`}>\n        <Button\n          shape=\"round\"\n          size=\"large\"\n          style={{ marginRight: 10 }}\n          onClick={async () => {\n            if (role === \"Client\") {\n              setRole(\"Server\");\n            } else {\n              setRole(\"Client\");\n            }\n          }}\n        >\n          <UserSwitchOutlined />\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Rename\">\n        <Button\n          shape=\"round\"\n          size=\"large\"\n          style={{ marginRight: 10 }}\n          onClick={() => {\n            setShowEdit(true);\n          }}\n        >\n          <EditOutlined />\n        </Button>\n      </Tooltip>\n      {codeRunResults[index]?.result && (\n        <Popover\n          content={<TreeDisplay />}\n          placement=\"leftBottom\"\n          trigger=\"click\"\n        >\n          <Tooltip title=\"Join Tree\">\n            <Button\n              shape=\"round\"\n              size=\"large\"\n              style={{ marginRight: 10 }}\n              onClick={() => {}}\n            >\n              <BarChartOutlined />\n            </Button>\n          </Tooltip>\n        </Popover>\n      )}\n      <Modal\n        title=\"Configuration\"\n        visible={showEdit}\n        onOk={reConfigure}\n        onCancel={() => {\n          form.resetFields();\n          setShowEdit(false);\n        }}\n      >\n        <Form initialValues={codeRunResults[index]} form={form}>\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input placeholder=\"Name\" />\n          </Form.Item>\n          <Form.Item name=\"num_of_rows\" label=\"Number of rows\">\n            <Input placeholder=\"Num of rows\" type=\"number\" />\n          </Form.Item>\n          <Form.Item name=\"annotation_name\" label=\"Annotation Name\">\n            <Input placeholder=\"Annotation Name\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </Row>\n  );\n}\n","import {\n  Card,\n  Typography,\n  Form,\n  Select,\n  Button,\n  message,\n  Input,\n  List,\n  Spin,\n} from \"antd\";\nimport React from \"react\";\nimport { BackEnd, Role, SettingsContext } from \"../../model/SettingsContext\";\nimport { useLocation } from \"react-router\";\nimport { CodeContext } from \"../../model/CodeContext\";\nimport { TableConfigContext } from \"../../model/TableContext\";\n\ninterface FormValue {\n  role: Role;\n  backend: BackEnd;\n  datadir: string;\n}\n\nexport default function SettingsPage() {\n  const {\n    role,\n    setRole,\n    backend,\n    setBackend,\n    datadir,\n    setDatadir,\n    loaded,\n    downloadData,\n    isDownloading,\n  } = React.useContext(SettingsContext);\n\n  const { configs, setConfigs } = React.useContext(TableConfigContext);\n\n  const { deleteResultCache } = React.useContext(CodeContext);\n\n  const formValue: FormValue = {\n    role: role,\n    backend: backend,\n    datadir: datadir,\n  };\n\n  const settings = (\n    <div>\n      <Card>\n        <Typography.Title level={5}>General Settings</Typography.Title>\n        <Form\n          initialValues={formValue}\n          onValuesChange={(changed) => {\n            if (changed.role) {\n              setRole(changed.role);\n            }\n            if (changed.backend) {\n              setBackend(changed.backend);\n            }\n\n            if (changed.datadir) {\n              setDatadir(changed.datadir);\n            }\n          }}\n        >\n          <Form.Item\n            label=\"Default data dir\"\n            name=\"datadir\"\n            help=\"Your table's data will be stored in this folder\"\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Role\" name=\"role\">\n            <Select>\n              {[\"Client\", \"Server\"].map((v, i) => (\n                <Select.Option value={v} key={`role-${i}`}>\n                  {v}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Backend\"\n            name=\"backend\"\n            extra=\"This will only affect the c++ code generator\"\n          >\n            <Select>\n              {[\"Default Backend\", \"Postgres Backend\"].map((v, i) => (\n                <Select.Option value={v} key={`role-${i}`}>\n                  {v}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Form>\n      </Card>\n      <Card title=\"Data\" style={{ marginTop: 10 }}>\n        <List>\n          <List.Item>\n            <List.Item.Meta\n              title=\"Stored results\"\n              description=\"Your query results\"\n            />\n            <Button\n              onClick={() => {\n                deleteResultCache();\n                message.success(\"Delete cache successfully\");\n              }}\n            >\n              Delete\n            </Button>\n          </List.Item>\n          <List.Item>\n            <List.Item.Meta\n              title=\"Download Data\"\n              description=\"Download table data from database\"\n            />\n            <Button\n              loading={isDownloading}\n              onClick={async () => {\n                let newConfig = await downloadData(configs);\n                if (newConfig) {\n                  setConfigs(newConfig);\n                }\n              }}\n            >\n              Download data\n            </Button>\n          </List.Item>\n        </List>\n      </Card>\n    </div>\n  );\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Typography.Title level={3}>Settings</Typography.Title>\n      {loaded ? settings : <Spin />}\n    </div>\n  );\n}\n","import { Button, Modal, notification, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { TableConfigContext } from \"../../model/TableContext\";\nimport { PlusOutlined, ReloadOutlined } from \"@ant-design/icons\";\n\nexport default function TableAction() {\n  const [open, setOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { configs, setConfigs, fetchConfigs } =\n    React.useContext(TableConfigContext);\n\n  const addTable = React.useCallback(() => {\n    configs.push({\n      table_name: \"table\",\n      data_sizes: [],\n      data_paths: [],\n      columns: [],\n      owner: \"Server\",\n      annotations: [],\n    });\n    setConfigs(configs);\n    setOpen(false);\n    notification.success({\n      message: \"Added a new table\",\n      placement: \"bottomRight\",\n    });\n  }, [configs]);\n\n  return (\n    <div>\n      <Tooltip title=\"Fetch Table Config from DB\">\n        <Button\n          shape=\"round\"\n          loading={isLoading}\n          style={{ marginRight: 20 }}\n          onClick={async () => {\n            setIsLoading(true);\n            await fetchConfigs();\n            setIsLoading(false);\n          }}\n        >\n          <ReloadOutlined />\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Create a new table\">\n        <Button\n          shape=\"round\"\n          style={{ marginRight: 20 }}\n          onClick={() => setOpen(true)}\n        >\n          <PlusOutlined />\n        </Button>\n      </Tooltip>\n      <Modal\n        visible={open}\n        title=\"Add New Table\"\n        onOk={addTable}\n        onCancel={() => {\n          setOpen(false);\n        }}\n      >\n        <Typography>Create a empty table?</Typography>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  TableOutlined,\n  SettingOutlined,\n  CodeOutlined,\n} from \"@ant-design/icons\";\nimport TableConfigPage from \"../components/pages/table/TableConfigPage\";\nimport CodePage from \"../components/pages/code/CodePage\";\nimport CodeAction from \"../components/pages/code/components/CodeAction\";\nimport SettingsPage from \"../components/pages/settings/SettingsPage\";\nimport TableAction from \"../components/pages/table/TableAction\";\n\ninterface Route {\n  path: string;\n  component: JSX.Element;\n  title: string;\n  icon: JSX.Element;\n  hasSubMenu: boolean;\n  action?: JSX.Element;\n}\n\nexport const routes: Route[] = [\n  {\n    path: \"/\",\n    title: \"Table Config\",\n    component: <TableConfigPage />,\n    icon: <TableOutlined />,\n    action: <TableAction />,\n    hasSubMenu: true,\n  },\n  {\n    path: \"/settings\",\n    title: \"Settings\",\n    component: <SettingsPage />,\n    icon: <SettingOutlined />,\n    hasSubMenu: false,\n  },\n  {\n    path: \"/editor\",\n    title: \"Query Editor\",\n    component: <CodePage />,\n    icon: <CodeOutlined />,\n    hasSubMenu: false,\n    action: <CodeAction />,\n  },\n];\n","import React from \"react\";\nimport { matchPath } from \"react-router\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport Sider from \"antd/lib/layout/Sider\";\nimport { Menu } from \"antd\";\nimport { routes } from \"../../settings/routes\";\nimport { TableConfigContext } from \"../model/TableContext\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport qs from \"query-string\";\n\nexport default function SideBar(props: { expanded: boolean }) {\n  const { configs } = React.useContext(TableConfigContext);\n  const location = useLocation();\n  const history = useHistory();\n  const [selectedPath, setSelectedPath] = React.useState(routes[0].title);\n  const { expanded } = props;\n  const table = qs.parse(location.search).table;\n\n  React.useEffect(() => {\n    if (location.pathname !== routes[0].path) {\n      let route = routes.find(\n        (r) => location.pathname.includes(r.path) && r.path !== routes[0].path\n      );\n      if (route) {\n        setSelectedPath(route?.title);\n      }\n    } else {\n      setSelectedPath(routes[0].title);\n    }\n  }, [location]);\n\n  const renderSubMenu = React.useCallback(\n    (path: string) => {\n      if (path === routes[0].path) {\n        return configs.map((c, i) => (\n          <Menu.Item\n            key={c.table_name}\n            onClick={() => {\n              history.push(`${routes[0].path}?table=${c.table_name}`);\n            }}\n          >\n            {c.table_name}\n          </Menu.Item>\n        ));\n      } else {\n        return [];\n      }\n    },\n    [configs]\n  );\n\n  const renderMenu = React.useCallback(() => {\n    return routes.map((r) => {\n      let subMenus = renderSubMenu(r.path);\n\n      if (!r.hasSubMenu) {\n        return (\n          <Menu.Item\n            key={r.title}\n            icon={r.icon}\n            onClick={() => history.push(r.path)}\n          >\n            {r.title}\n          </Menu.Item>\n        );\n      } else {\n        return (\n          <SubMenu\n            key={r.title}\n            title={r.title}\n            onTitleClick={() => history.push(r.path)}\n            icon={r.icon}\n          >\n            {subMenus}\n          </SubMenu>\n        );\n      }\n    });\n  }, [configs]);\n\n  return (\n    <Menu\n      theme=\"light\"\n      mode=\"inline\"\n      selectedKeys={table === undefined ? [selectedPath] : [table as string]}\n      style={{ height: \"100%\" }}\n    >\n      {renderMenu()}\n    </Menu>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Button, Card, Layout, Menu, Row } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport SideBar from \"./components/sider/SideBar\";\nimport { routes } from \"./settings/routes\";\nimport TableConfigProvider from \"./components/model/TableContext\";\nimport CodeProvider from \"./components/model/CodeContext\";\nimport SettingsProvider from \"./components/model/SettingsContext\";\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const [collapsed, setCollapsed] = React.useState(false);\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <SettingsProvider>\n        <CodeProvider>\n          <TableConfigProvider>\n            <Router>\n              <Layout style={{ height: \"100vh\", overflow: \"hidden\" }}>\n                <Card\n                  style={{ margin: 0, padding: 0 }}\n                  bodyStyle={{ padding: 0 }}\n                >\n                  <Row align=\"middle\">\n                    <div\n                      className=\"trigger\"\n                      onClick={() => setCollapsed(!collapsed)}\n                    >\n                      {collapsed ? (\n                        <MenuUnfoldOutlined />\n                      ) : (\n                        <MenuFoldOutlined />\n                      )}\n                    </div>\n                    <h1 style={{ padding: 10 }}>CodeGen</h1>\n                    <div style={{ flexGrow: 1 }}> </div>\n                    <Switch>\n                      {routes.map((r, i) => (\n                        <Route key={`route-action-${i}`} path={r.path} exact>\n                          {r.action}\n                        </Route>\n                      ))}\n                    </Switch>\n                  </Row>\n                </Card>\n\n                <Layout style={{ background: \"white\" }}>\n                  <Sider\n                    collapsible\n                    style={{ background: \"#fff\" }}\n                    trigger={null}\n                    collapsed={collapsed}\n                  >\n                    <SideBar expanded={!collapsed} />\n                  </Sider>\n                  <Content\n                    style={{\n                      margin: \"0px 0px\",\n                      padding: 0,\n                      minHeight: 280,\n                    }}\n                  >\n                    <Switch>\n                      {routes.map((r, i) => (\n                        <Route key={`route-${i}`} path={r.path} exact>\n                          {r.component}\n                        </Route>\n                      ))}\n                    </Switch>\n                  </Content>\n                </Layout>\n              </Layout>\n            </Router>\n          </TableConfigProvider>\n        </CodeProvider>\n      </SettingsProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}